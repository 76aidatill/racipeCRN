% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/icSampling.R
\name{cracipeSample}
\alias{cracipeSample}
\title{Sample from a specified Stoichiometric Compatibility class for a CRN}
\usage{
cracipeSample(
  network,
  classPoint = NULL,
  numModels = 2000,
  numIC = 1,
  walkLength = 1,
  numBurns = 0,
  lambda = 10,
  sameClass = FALSE
)
}
\arguments{
\item{network}{xml_document or cRacipeSE object or character containing the
file path to a text file with the network's topology. xml_document objects
must be in SBML format. If it is a cRacipeSE object, the output will be that
object with updated initial conditions. Else, the output will be a dataframe.}

\item{classPoint}{(optional) vector or matrix. Default NULL. This argument
can be used to define the stoichiometric compatibility class. If
\code{sameClass} is true, it should be a vector with numSpecies elements.
If \code{sameClass} is false, it should be a matrix with numSpecies rows and
numModels columns. Every element should be nonnegative. If not provided, the
classPoints will be randomly generated.}

\item{numModels}{(optional) Integer. Default 2000. Number of random models
to be simulated.}

\item{numIC}{(optional) Integer. Default 1. Number of initial conditions to
simulate for each model.}

\item{walkLength}{(optional) Integer. Default 1. Number of steps between
generated points in the random walk.}

\item{numBurns}{(optional) Integer. Default 0. Number of initial points from
the random walk to discard before sampling starts.}

\item{lambda}{(optional) numeric. Default 10. Bounding parameter used in for
sampling non-conservative networks to make the sampling space have finite
size}

\item{sameClass}{(optional) logical. Default \code{FALSE}.
Whether or not to sample from the same SCC for each model in the ensemble.}
}
\value{
cRacipeSE object or dataframe
}
\description{
Given the topology of a CRN, this function samples points from
the phase space of the CRN which all belong to the same stoichiometric
compatibility class (SCC). The function uses the stoichiometry matrix to
distinguish between conservative CRNs, non-conservative CRNs with geometric
constraints, and non-conservative CRNs without geometric constraints.
For non-conservative CRNs, a bounding parameter is used so the sampling space
is finite. Sampling of polytopes is performed using random walks in volesti.
}
\section{Related Functions}{


\code{\link{cracipeNetwork}}
\code{\link{cracipeSimulate}}
}

\examples{
wilhelm <- system.file("extdata", "wilhelm.tpo", package = "racipeCRN")
wilhelmICs <- cracipeSample(network = wilhelm, numModels = 10, lambda = 1)

}
